name: Android Build

on:
  push:
    branches: [ main ] # Trigger on pushes to the 'main' branch
  pull_request:
    branches: [ main ] # Trigger on pull requests to the 'main' branch

jobs:
  build-android:
    name: Build Android APK
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Enable Corepack
        run: corepack enable

     

      - name: Install dependencies
        run: npm install
        working-directory: ./

      - name: Print React Native Config
        run: npx react-native config
        working-directory: ./

      - name: Verify react-native.config.js
        run: cat react-native.config.js
        working-directory: ./
      
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 30
          build-tools: 30.0.3

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew
        working-directory: android
  
      - name: Clean Build Environment
        run: ./gradlew clean
        working-directory: android

      - name: Generate autolinking package list
        run: |
          cd android
          ./gradlew generateAutolinkingPackageList
  
      - name: Build Android Release APK
        run: ./gradlew assembleRelease
        working-directory: android
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-app
          path: android/app/build/outputs/apk/release/app-release.apk
